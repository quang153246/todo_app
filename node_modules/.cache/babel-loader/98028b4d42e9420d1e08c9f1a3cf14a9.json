{"ast":null,"code":"// const initialState = {\n//     filters: {\n//         search: '',\n//         status: 'All',\n//         prioriry: []\n//     }\n// }\n// const filtersReducer = (state = initialState, action) => {\n//     switch(action.type) {\n//         case 'filters/searchFilterChange':\n//             return{\n//                 ...state,\n//                 search: action.payload\n//             }\n//         case 'filters/statusFilterChange':\n//             return{\n//                 ...state,\n//                 status: action.payload\n//             }\n//         default:\n//             return state\n//     }\n// }\n// export default filtersReducer\nimport { createSlice } from '@reduxjs/toolkit';\nexport default createSlice({\n  name: 'filters',\n  initialState: {\n    search: '',\n    status: 'All',\n    prioriry: []\n  },\n  reducers: {\n    searchFilterChange: (state, action) => {\n      //viết như mutation || thư viện IMMER\n      state.search = action.payload;\n    },\n    statusFilterChange: (state, action) => {\n      state.status = action.payload;\n    }\n  }\n});","map":{"version":3,"sources":["C:/Users/ASUS/OneDrive - VNU-HCMUS/Desktop/todo-app-redux/src/components/Filters/FiltersSlice.js"],"names":["createSlice","name","initialState","search","status","prioriry","reducers","searchFilterChange","state","action","payload","statusFilterChange"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAGA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,eAAeA,WAAW,CAAC;AACvBC,EAAAA,IAAI,EAAE,SADiB;AAEvBC,EAAAA,YAAY,EAAE;AACVC,IAAAA,MAAM,EAAE,EADE;AAEVC,IAAAA,MAAM,EAAE,KAFE;AAGVC,IAAAA,QAAQ,EAAE;AAHA,GAFS;AAOvBC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,kBAAkB,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACnC;AACAD,MAAAA,KAAK,CAACL,MAAN,GAAeM,MAAM,CAACC,OAAtB;AACH,KAJK;AAKNC,IAAAA,kBAAkB,EAAE,CAACH,KAAD,EAAQC,MAAR,KAAmB;AACnCD,MAAAA,KAAK,CAACJ,MAAN,GAAeK,MAAM,CAACC,OAAtB;AACH;AAPK;AAPa,CAAD,CAA1B","sourcesContent":["// const initialState = {\r\n//     filters: {\r\n//         search: '',\r\n//         status: 'All',\r\n//         prioriry: []\r\n//     }\r\n// }\r\n\r\n\r\n// const filtersReducer = (state = initialState, action) => {\r\n//     switch(action.type) {\r\n//         case 'filters/searchFilterChange':\r\n//             return{\r\n//                 ...state,\r\n//                 search: action.payload\r\n//             }\r\n//         case 'filters/statusFilterChange':\r\n//             return{\r\n//                 ...state,\r\n//                 status: action.payload\r\n//             }\r\n//         default:\r\n//             return state\r\n//     }\r\n\r\n// }\r\n\r\n// export default filtersReducer\r\n\r\n\r\nimport { createSlice } from '@reduxjs/toolkit'\r\n\r\nexport default createSlice({\r\n    name: 'filters',\r\n    initialState: {\r\n        search: '',\r\n        status: 'All',\r\n        prioriry: []\r\n    },\r\n    reducers: {\r\n        searchFilterChange: (state, action) => {\r\n            //viết như mutation || thư viện IMMER\r\n            state.search = action.payload;\r\n        },\r\n        statusFilterChange: (state, action) => {\r\n            state.status = action.payload;\r\n        }\r\n    }\r\n})"]},"metadata":{},"sourceType":"module"}