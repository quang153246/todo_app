{"ast":null,"code":"// export const todoListSelector = ( state ) => {\n//     const todoRemaining = state.todoList.filter( todo => {\n//         return todo.name.includes(state.filters.search)\n//     })\n//     return todoRemaining\n// }\nimport { createSelector } from '@reduxjs/toolkit';\nexport const searchTextSelector = state => state.filters.search;\nexport const filterStatusSelector = state => state.filters.status;\nexport const todoListSelector = state => state.todoList;\nexport const filterPrioritiesSelector = state => state.filters.priorities;\nexport const todoRemainingSelector = createSelector(todoListSelector, filterStatusSelector, searchTextSelector, filterPrioritiesSelector, (todoList, status, searchText, priorities) => {\n  return todoList.filter(todo => {\n    if (status === \"All\") {\n      console.log(priorities.length ? todo.name.includes(searchText) && priorities.includes(todo.priority) : todo.name.includes(searchText));\n      return priorities.length ? todo.name.includes(searchText) && priorities.includes(todo.priority) : todo.name.includes(searchText);\n    }\n\n    return todo.name.includes(searchText) && (status === 'Completed' ? todo.completed : !todo.completed) && (priorities.length ? priorities.includes(todo.priority) : true);\n  });\n});","map":{"version":3,"sources":["C:/Users/ASUS/OneDrive - VNU-HCMUS/Desktop/todo-app-redux/src/redux/selectors.js"],"names":["createSelector","searchTextSelector","state","filters","search","filterStatusSelector","status","todoListSelector","todoList","filterPrioritiesSelector","priorities","todoRemainingSelector","searchText","filter","todo","console","log","length","name","includes","priority","completed"],"mappings":"AAEA;AACI;AACI;AACA;AAEA;AACA;AAER,SAASA,cAAT,QAA+B,kBAA/B;AAEA,OAAO,MAAMC,kBAAkB,GAAKC,KAAF,IAAaA,KAAK,CAACC,OAAN,CAAcC,MAAtD;AACP,OAAO,MAAMC,oBAAoB,GAAKH,KAAF,IAAaA,KAAK,CAACC,OAAN,CAAcG,MAAxD;AACP,OAAO,MAAMC,gBAAgB,GAAKL,KAAF,IAAaA,KAAK,CAACM,QAA5C;AACP,OAAO,MAAMC,wBAAwB,GAAKP,KAAF,IAAaA,KAAK,CAACC,OAAN,CAAcO,UAA5D;AAEP,OAAO,MAAMC,qBAAqB,GAAGX,cAAc,CAE/CO,gBAF+C,EAG/CF,oBAH+C,EAI/CJ,kBAJ+C,EAK/CQ,wBAL+C,EAM/C,CAACD,QAAD,EAAWF,MAAX,EAAmBM,UAAnB,EAA+BF,UAA/B,KAA8C;AAC1C,SAAOF,QAAQ,CAACK,MAAT,CAAiBC,IAAD,IAAU;AAC7B,QAAGR,MAAM,KAAK,KAAd,EAAoB;AAChBS,MAAAA,OAAO,CAACC,GAAR,CAAYN,UAAU,CAACO,MAAX,GACNH,IAAI,CAACI,IAAL,CAAUC,QAAV,CAAmBP,UAAnB,KAAkCF,UAAU,CAACS,QAAX,CAAoBL,IAAI,CAACM,QAAzB,CAD5B,GAENN,IAAI,CAACI,IAAL,CAAUC,QAAV,CAAmBP,UAAnB,CAFN;AAGA,aAAOF,UAAU,CAACO,MAAX,GACLH,IAAI,CAACI,IAAL,CAAUC,QAAV,CAAmBP,UAAnB,KAAkCF,UAAU,CAACS,QAAX,CAAoBL,IAAI,CAACM,QAAzB,CAD7B,GAELN,IAAI,CAACI,IAAL,CAAUC,QAAV,CAAmBP,UAAnB,CAFF;AAGH;;AAED,WACIE,IAAI,CAACI,IAAL,CAAUC,QAAV,CAAmBP,UAAnB,MACCN,MAAM,KAAK,WAAX,GAAyBQ,IAAI,CAACO,SAA9B,GAA0C,CAACP,IAAI,CAACO,SADjD,MAECX,UAAU,CAACO,MAAX,GAAoBP,UAAU,CAACS,QAAX,CAAoBL,IAAI,CAACM,QAAzB,CAApB,GAAyD,IAF1D,CADJ;AAKH,GAfM,CAAP;AAgBH,CAvB8C,CAA5C","sourcesContent":["\r\n\r\n// export const todoListSelector = ( state ) => {\r\n    //     const todoRemaining = state.todoList.filter( todo => {\r\n        //         return todo.name.includes(state.filters.search)\r\n        //     })\r\n        \r\n        //     return todoRemaining\r\n        // }\r\n        \r\nimport { createSelector } from '@reduxjs/toolkit'\r\n\r\nexport const searchTextSelector = ( state ) => state.filters.search\r\nexport const filterStatusSelector = ( state ) => state.filters.status\r\nexport const todoListSelector = ( state ) => state.todoList\r\nexport const filterPrioritiesSelector = ( state ) => state.filters.priorities\r\n\r\nexport const todoRemainingSelector = createSelector(\r\n   \r\n    todoListSelector,\r\n    filterStatusSelector,\r\n    searchTextSelector,\r\n    filterPrioritiesSelector,\r\n    (todoList, status, searchText, priorities) => {\r\n        return todoList.filter((todo) => {\r\n            if(status === \"All\"){\r\n                console.log(priorities.length\r\n                    ? todo.name.includes(searchText) && priorities.includes(todo.priority)\r\n                    : todo.name.includes(searchText))\r\n                return priorities.length\r\n                ? todo.name.includes(searchText) && priorities.includes(todo.priority)\r\n                : todo.name.includes(searchText)\r\n            }\r\n            \r\n            return (\r\n                todo.name.includes(searchText) && \r\n                (status === 'Completed' ? todo.completed : !todo.completed) &&\r\n                (priorities.length ? priorities.includes(todo.priority) : true)\r\n            );\r\n        });\r\n    } \r\n)"]},"metadata":{},"sourceType":"module"}