{"ast":null,"code":"import { createSelector } from \"reselect\"; // export const todoListSelector = ( state ) => {\n//     const todoRemaining = state.todoList.filter( todo => {\n//         return todo.name.includes(state.filters.search)\n//     })\n//     return todoRemaining\n// }\n\nexport const searchTextSelector = state => state.filters.search;\nexport const filterStatusSelector = state => state.filters.status;\nexport const todoListSelector = state => state.todoList;\nexport const todoRemainingSelector = createSelector(todoListSelector, filterStatusSelector, searchTextSelector, (todoList, status, searchText) => {// return todoList.filter((todo) => {\n  //     if(status === \"All\"){\n  //         return todo.name.includes(searchText)\n  //     }\n  //     return (\n  //         todo.name.includes(searchText) && \n  //         (status !== 'Completed' ? todo.completed : !todo.completed)\n  //     )\n  // });\n});","map":{"version":3,"sources":["C:/Users/ASUS/OneDrive - VNU-HCMUS/Desktop/todo-app-redux/src/redux/selectors.js"],"names":["createSelector","searchTextSelector","state","filters","search","filterStatusSelector","status","todoListSelector","todoList","todoRemainingSelector","searchText"],"mappings":"AAAA,SAASA,cAAT,QAA+B,UAA/B,C,CAEA;AACA;AACA;AACA;AAEA;AACA;;AAEA,OAAO,MAAMC,kBAAkB,GAAKC,KAAF,IAAaA,KAAK,CAACC,OAAN,CAAcC,MAAtD;AACP,OAAO,MAAMC,oBAAoB,GAAKH,KAAF,IAAaA,KAAK,CAACC,OAAN,CAAcG,MAAxD;AACP,OAAO,MAAMC,gBAAgB,GAAKL,KAAF,IAAaA,KAAK,CAACM,QAA5C;AAEP,OAAO,MAAMC,qBAAqB,GAAGT,cAAc,CAE/CO,gBAF+C,EAG/CF,oBAH+C,EAI/CJ,kBAJ+C,EAK/C,CAACO,QAAD,EAAWF,MAAX,EAAmBI,UAAnB,KAAkC,CAC9B;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACH,CAhB8C,CAA5C","sourcesContent":["import { createSelector } from \"reselect\"\r\n\r\n// export const todoListSelector = ( state ) => {\r\n//     const todoRemaining = state.todoList.filter( todo => {\r\n//         return todo.name.includes(state.filters.search)\r\n//     })\r\n\r\n//     return todoRemaining\r\n// }\r\n\r\nexport const searchTextSelector = ( state ) => state.filters.search\r\nexport const filterStatusSelector = ( state ) => state.filters.status\r\nexport const todoListSelector = ( state ) => state.todoList\r\n\r\nexport const todoRemainingSelector = createSelector(\r\n   \r\n    todoListSelector,\r\n    filterStatusSelector,\r\n    searchTextSelector,\r\n    (todoList, status, searchText) => {\r\n        // return todoList.filter((todo) => {\r\n        //     if(status === \"All\"){\r\n        //         return todo.name.includes(searchText)\r\n        //     }\r\n\r\n        //     return (\r\n        //         todo.name.includes(searchText) && \r\n        //         (status !== 'Completed' ? todo.completed : !todo.completed)\r\n        //     )\r\n        // });\r\n    } \r\n)"]},"metadata":{},"sourceType":"module"}